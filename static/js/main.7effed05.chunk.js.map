{"version":3,"sources":["components/CardsList/CardsList.tsx","components/PaginationBlock/PaginationBlock.tsx","components/StarshipCard/StarshipCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EAction","PaginationBlock","props","Pagination","size","className","PaginationItem","disabled","prev","PaginationLink","previous","href","onClick","next","StarshipCard","Card","CardBody","CardTitle","tag","item","name","CardSubtitle","model","CardText","starship_class","hyperdrive_rating","passengers","manufacturer","CardsList","useState","data","setData","page","setPage","useEffect","fetch","then","res","json","results","map","index","value","Spinner","color","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAcYA,E,6FCJCC,EAAkB,SAACC,GAC9B,OACE,eAACC,EAAA,EAAD,CAAYC,KAAK,KAAKC,UAAU,gCAAhC,UACE,cAACC,EAAA,EAAD,CAAgBC,UAAWL,EAAMM,KAAjC,SACE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,KAAK,IACLC,QAAS,WAAOV,EAAMU,QAAQZ,EAAQQ,WAG1C,cAACF,EAAA,EAAD,CAAgBC,UAAWL,EAAMW,KAAjC,SACE,cAACJ,EAAA,EAAD,CACEI,MAAI,EACJF,KAAK,IACLC,QAAS,WAAOV,EAAMU,QAAQZ,EAAQa,e,wCCPnCC,G,MAAe,SAACZ,GAC3B,OACE,8BACE,cAACa,EAAA,EAAD,CAAMV,UAAU,iCAAhB,SACE,eAACW,EAAA,EAAD,CAAUX,UAAU,cAApB,UACE,cAACY,EAAA,EAAD,CAAWZ,UAAU,wBAAwBa,IAAI,KAAjD,SAAuDhB,EAAMiB,KAAKC,OAClE,cAACC,EAAA,EAAD,CAAcH,IAAI,KAAKb,UAAU,iCAAjC,SACGH,EAAMiB,KAAKG,QAEd,eAACC,EAAA,EAAD,CAAUlB,UAAU,uCAApB,6BACmBH,EAAMiB,KAAKK,eAD9B,IAC8C,uBAD9C,uBAEuBtB,EAAMiB,KAAKM,kBAChC,uBAHF,eAIevB,EAAMiB,KAAKO,WACxB,uBALF,iBAMiBxB,EAAMiB,KAAKQ,yB,gBFlB1B3B,K,YAAAA,E,aAAAA,M,KAKL,IAAM4B,EAAY,WACvB,MAAwBC,mBAAsC,MAA9D,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAoC,MAA5D,mBAAOG,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRC,MAAMH,GAAc,oCACjBI,MAAK,SAACC,GAAD,OAAmBA,EAAIC,UAC5BF,MAAK,SAACC,GAAD,OAA+BN,EAAQM,QAC9C,CAACL,IAYJ,OAAIF,EAQF,gCACE,qBAAKzB,UAAU,+DAAf,SACKyB,EAAKS,QAAQC,KAAI,SAACrB,EAAMsB,GACvB,OAAO,cAAC,EAAD,CAActB,KAAMA,GAAWsB,QAGxC,cAAC,EAAD,CACE5B,KAAMiB,EAAKjB,KACXL,KAAMsB,EAAKpB,SACXE,QA3BuB,SAAC8B,GAChC,OAAQA,GACN,KAAK1C,EAAQQ,KACXyB,EAAO,OAACH,QAAD,IAACA,OAAD,EAACA,EAAMpB,UACd,MACF,KAAKV,EAAQa,KACXoB,EAAO,OAACH,QAAD,IAACA,OAAD,EAACA,EAAMjB,aAMhB,qBAAKR,UAAU,uCAAf,SACE,cAACsC,EAAA,EAAD,CAASC,MAAM,SAASC,SAAS,GAAGxC,UAAU,cG7BvCyC,MATf,WAEE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7effed05.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Spinner } from \"reactstrap\";\nimport { PaginationBlock } from \"../PaginationBlock/PaginationBlock\";\nimport { ItemType, StarshipCard } from \"../StarshipCard/StarshipCard\";\nimport \"./CardsList.css\";\n\n\ntype StarshipResponseType = {\n  count: number,\n  next: string | null,\n  previous: string | null,\n  results: ItemType[],\n}\n\nexport enum EAction {\n  next = \"next\",\n  prev = \"prev\",\n}\n\nexport const CardsList = () => {\n  const [data, setData] = useState<StarshipResponseType | null>(null);\n  const [page, setPage] = useState<string | null | undefined>(null);\n\n  useEffect(() => {\n    fetch(page ? page : 'https://swapi.dev/api/starships/')\n      .then((res: Response) => res.json())\n      .then((res: StarshipResponseType) => setData(res));\n  }, [page]);\n\n  const onPaginationClickHandler = (value: EAction) => {\n    switch (value) {\n      case EAction.prev:\n        setPage(data?.previous);\n        break;\n      case EAction.next:\n        setPage(data?.next);\n        break;\n    }\n  };\n  if(!data) {\n    return (\n      <div className=\"d-flex justify-content-center vh-100\">\n        <Spinner color=\"danger\" children=\"\" className=\"m-auto\"/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <div className=\"d-flex flex-wrap justify-content-center cards-gaps pt-3 pb-3\">\n          {data.results.map((item, index) => {\n            return <StarshipCard item={item} key={index} />;\n          })}\n      </div>\n          <PaginationBlock\n            next={data.next}\n            prev={data.previous}\n            onClick={onPaginationClickHandler}\n          />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport { EAction } from \"../CardsList/CardsList\";\n\ntype PaginationBlockPropsType = {\n  next: string | null;\n  prev: string | null;\n  onClick: (value: EAction) => void;\n};\n\nexport const PaginationBlock = (props: PaginationBlockPropsType) => {\n  return (\n    <Pagination size=\"lg\" className=\"d-flex justify-content-center\">\n      <PaginationItem disabled={!props.prev}>\n        <PaginationLink\n          previous\n          href=\"#\"\n          onClick={() => {props.onClick(EAction.prev)}}\n        />\n      </PaginationItem>\n      <PaginationItem disabled={!props.next}>\n        <PaginationLink\n          next\n          href=\"#\"\n          onClick={() => {props.onClick(EAction.next)}}\n        />\n      </PaginationItem>\n    </Pagination>\n  );\n};\n","import React from \"react\";\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport \"./StarshipCard.css\";\n\nexport type ItemType = {\n  name: string;\n  model: string;\n  starship_class: string;\n  hyperdrive_rating: string;\n  passengers: string;\n  manufacturer: string;\n};\n\ntype ItemPropsType = {\n  item: ItemType;\n};\n\nexport const StarshipCard = (props: ItemPropsType) => {\n  return (\n    <div>\n      <Card className=\"border border-danger border-2 \">\n        <CardBody className=\"text-center\">\n          <CardTitle className=\"text-truncate fw-bold\" tag=\"h5\">{props.item.name}</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted text-truncate \">\n            {props.item.model}\n          </CardSubtitle>\n          <CardText className=\"text-truncate text-uppercase fw-bold\">\n            Starship Class: {props.item.starship_class} <br />\n            Hyperdriive Rating: {props.item.hyperdrive_rating}\n            <br />\n            Pessengers: {props.item.passengers}\n            <br />\n            Manufacturer: {props.item.manufacturer}\n          </CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { CardsList } from './components/CardsList/CardsList';\n\nfunction App() {\n\n  return (\n    <div>\n      <CardsList />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}